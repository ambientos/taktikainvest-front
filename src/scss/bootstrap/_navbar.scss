// Contents
//
// Navbar
// Navbar brand
// Navbar nav
// Navbar text
// Navbar divider
// Responsive navbar
// Navbar position
// Navbar themes


// Navbar
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
  position: relative;
  display: flex;
  flex-wrap: wrap; // allow us to do the line break for collapsing content
  align-items: center;
  justify-content: space-between; // space out brand from logo
  padding: $navbar-padding-y $navbar-padding-x;

  // Because flex properties aren't inherited, we need to redeclare these first
  // few properties so that content nested within behave properly.
  > .container,
  > .container-fluid {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
  }
}


// Navbar brand
//
// Used for brand, project, or site names.

.navbar-brand {
  display: inline-block;
  padding-top: $navbar-brand-padding-y;
  padding-bottom: $navbar-brand-padding-y;
  margin-right: $navbar-padding-x;
  @include font-size($navbar-brand-font-size);
  line-height: inherit;
  white-space: nowrap;

  @include hover-focus {
    text-decoration: none;
  }
}


// Navbar nav
//
// Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).

.navbar-nav {
  display: flex;
  flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;

  .nav-link {
    padding-right: 0;
    padding-left: 0;
  }

  .dropdown-menu {
    position: static;
  }
}


// Navbar text
//
//

.navbar-text {
  display: inline-block;
  padding-top: $nav-link-padding-y;
  padding-bottom: $nav-link-padding-y;
}


// Responsive navbar
//
// Custom styles for responsive collapsing and toggling of navbar contents.
// Powered by the collapse Bootstrap JavaScript plugin.

// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.
.navbar-collapse {
  flex-basis: 100%;
  flex-grow: 1;
  // For always expanded or extra full navbars, ensure content aligns itself
  // properly vertically. Can be easily overridden with flex utilities.
  align-items: center;
}

// Button for toggling the navbar when in its collapsed state
.navbar-toggler {
  padding: $navbar-toggler-padding-y $navbar-toggler-padding-x;
  @include font-size($navbar-toggler-font-size);
  line-height: 1;
  background-color: transparent; // remove default button style
  border: none;//$border-width solid transparent; // remove default button style
  @include border-radius($navbar-toggler-border-radius);

  @include hover-focus {
    text-decoration: none;
  }
}

// Keep as a separate element so folks can easily override it with another icon
// or image file as needed.
.navbar-toggler-icon {
  display: inline-block;
  width: 1.9em;
  height: 1.9em;
  vertical-align: middle;
  content: "";
  background: no-repeat center center;
  background-size: 100% 100%;
}

// Generate series of `.navbar-expand-*` responsive classes for configuring
// where your navbar collapses.
.navbar-expand {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        > .container,
        > .container-fluid {
          padding-right: 0;
          padding-left: 0;
        }
      }

      @include media-breakpoint-up($next) {
        flex-flow: row nowrap;
        justify-content: flex-start;

        .navbar-nav {
          flex-direction: row;

          .dropdown-menu {
            position: absolute;
          }

          .nav-link {
            padding-right: $navbar-nav-link-padding-x;
            padding-left: $navbar-nav-link-padding-x;
          }
        }

        // For nesting containers, have to redeclare for alignment purposes
        > .container,
        > .container-fluid {
          flex-wrap: nowrap;
        }

        .navbar-collapse {
          display: flex !important; // stylelint-disable-line declaration-no-important

          // Changes flex-bases to auto because of an IE10 bug
          flex-basis: auto;
        }

        .navbar-toggler {
          display: none;
        }
      }
    }
  }
}


// Navbar themes
//
// Styles for switching between navbars with light or dark background.

// White links against a dark background
.navbar-dark {
  .navbar-toggler {
    color: $navbar-dark-color;
    border-color: $navbar-dark-toggler-border-color;
  }

  .navbar-toggler-icon {
    background-image: $navbar-dark-toggler-icon-bg;
  }
}

.navbar-light {
  .navbar-toggler {
    color: $navbar-dark-color;
    border-color: $navbar-light-toggler-border-color;
  }

  .navbar-toggler-icon {
    background-image: $navbar-light-toggler-icon-bg;
  }
}


.navbar-social {
  &-item {
    display: inline-block;
    padding: .2em;

    &:not(:first-child) {
      margin-left: 1em;
    }

    &._home {
      color: inherit;
    }

    @include media-breakpoint-down('md') {
      &,
      &._home {
        color: $gray-900;
      }
    }

    &:hover {
      color: $secondary;
    }
  }
}

.navbar-nav {
  &._home {
    .dropdown-menu {
      border-bottom: 2px solid rgba($white, .15);
    }

    li {
      font-weight: $font-weight-semibold;
    }

    a {
      color: inherit;

      &:hover {
        color: $secondary;
      }
    }
  }

  .menu-item-has-children {
    position: relative;

    > a::after {
      $size: .625rem;

      display: inline-block;
      position: relative;
      top: -.1em;
      width: $size;
      height: $size;
      margin-left: .7em;
      border: {
        width: 2px;
        style: none solid solid none;
      }
      content: '';
      transform: rotate(45deg);
    }
  }
}

.navbar-top {
  padding: 0;

  &:not(._home) {
    color: $gray-600;

    @include media-breakpoint-up('lg') {
      box-shadow: 0 6px 20px 0 rgba($black, .05);
    }

    @include media-breakpoint-down('md') {
      background: $gray-100;
    }

    .dropdown-menu {
      @include media-breakpoint-up('lg') {
        padding: 0 1em 1em;
        background-color: $white;
        box-shadow: 0 6px 20px 0 rgba($black, .05);
      }
    }
  }

  .nav-item {
    @include media-breakpoint-up('xl') {
      padding-right: 1.9rem;
    }

    &:hover {
      > .dropdown-menu {
        display: block;
      }
    }
  }

  .nav-link {
    @include media-breakpoint-up('lg') {
      $padding-y: 1.5rem;

      padding: {
        top: $padding-y;
        bottom: $padding-y;
      }
    }
  }

  .dropdown {
    &-menu {
      display: none;
      left: $navbar-nav-link-padding-x;
      top: 90%;
      right: $navbar-nav-link-padding-x;
      padding-bottom: .8em;
      z-index: 3;

      @include media-breakpoint-down('md') {
        margin-left: 1em;
      }
    }

    &-item {
      display: block;
      margin: .3em 0;
    }
  }

  @include media-breakpoint-down('md') {
    z-index: 3;

    .navbar-collapse {
      padding: 1.5rem 1.25rem;
      color: $body-color;
      background-color: $white;
      opacity: 0;
      box-shadow: 0 5px 12px -5px rgba($black, .1);
      @include transition;

      &.show {
        opacity: 1;
      }
    }
  }

  a {
    color: inherit;

    &:hover {
      color: $secondary;
    }
  }
}

.navbar-call {
  margin: 1.5em 0;

  .header-call {
    margin-top: .5em;
  }
}
